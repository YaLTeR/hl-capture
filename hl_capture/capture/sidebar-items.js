initSidebarItems({"enum":[["CaptureThreadEvent",""],["GameThreadEvent",""]],"fn":[["capture",""],["capture_audio",""],["capture_thread",""],["encode",""],["get_audio_buffer",""],["get_buffer",""],["get_capture_parameters",""],["get_event",""],["get_event_block",""],["initialize",""],["is_capturing",""],["parse_capture_parameters","Parses the CVar values into `CaptureParameters`."],["parse_encoder_parameters","Parses the CVar values into `EncoderParameters`."],["parse_exposure","Parses the given string into a valid exposure value."],["parse_fps","Parses the given string and returns a time base."],["parse_pixel_format","Parses the given string into a pixel format."],["stop",""],["stop_encoder","Properly closes and drops the encoder."],["test_encoder","Starts and stops the encoder."]],"static":[["AUDIO_BUF_RECEIVER",""],["CAPTURING",""],["GAME_THREAD_RECEIVER",""],["SEND_TO_CAPTURE_THREAD",""],["VIDEO_BUF_RECEIVER",""],["cap_audio_bitrate",""],["cap_audio_encoder_settings",""],["cap_crf",""],["cap_filename",""],["cap_fps",""],["cap_muxer_settings",""],["cap_pixel_format",""],["cap_sampling_exposure",""],["cap_sampling_sps",""],["cap_sound_extra",""],["cap_video_bitrate",""],["cap_video_encoder_settings",""],["cap_volume",""],["cap_vpx_threads",""],["cap_x264_preset",""]],"struct":[["AUDIO_BUF_RECEIVER","Receives buffers to write samples to."],["AudioBuffer",""],["CAPTURING",""],["CaptureParameters",""],["GAME_THREAD_RECEIVER","Receives various game thread-related events, such as console messages to print."],["SEND_TO_CAPTURE_THREAD","Sends events and frames to encode to the capture thread."],["SendOnDrop",""],["VIDEO_BUF_RECEIVER","Receives buffers to write pixels to."],["VideoBuffer",""],["cap_start",""],["cap_stop",""],["cap_test",""],["cap_version",""]],"type":[["Result",""]]});