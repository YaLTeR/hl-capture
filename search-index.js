var N=null,E="",T="t",U="u",searchIndex={};
var R=["c_int","__private_field","sender","videobuffer","option","encoder","mainthreadmarker","gamethreadevent","capture","audiobuffer","rational","encoderparameters","captureparameters","result","CAPTURING","VIDEO_BUF_RECEIVER","AUDIO_BUF_RECEIVER","GAME_THREAD_RECEIVER","SEND_TO_CAPTURE_THREAD","videoframe","callback","hl_capture","engine","This field has to be public because there's no const fn.…","time_base","initialize","string","VIDEO_ENCODER","AUDIO_ENCODER","output_frame","engine_cvar","_private","Result","data_mut","mainthreaddata","get_engine_cvar","fps_converter","video_resolution","oclruntimedata","backup_and_free_ocl_data","This should be called before an engine restart.","hl_capture::fps_converter","remainder","Difference, in video frames, between how much time passed…","The target time_base.","RunListenServer","CL_Disconnect","Con_ToggleConsole_f","GL_SetMode","Host_FilterTime","Key_Event","Memory_Init","S_PaintChannels","S_TransferStereo16","Sys_VID_FlipScreen","VideoMode_IsWindowed","The \"main\" function of hw.so, called inside…","Stops the currently running game, returning to the main…","Handler for the `toggleconsole` command.","Sets up the main FBOs and the display mode.","Calculates the frame time and limits the FPS.","Handles key callbacks.","Initializes the hunk memory.","Mixes sound into the output buffer using the paintbuffer.","Transfers the contents of the paintbuffer into the output…","Flips the screen.","Returns whether the game is running in windowed mode.","register_variable","con_print","Prints the given string to the game console.","cmd_argc","cmd_argv","proque","spatialdims","Converts from `MaybeUnavailable<T>` to…","maybeunavailable","hl_capture::capture","try_from","try_into","borrow_mut","type_id","borrow","typeid","hl_capture::command","hl_capture::cvar","hl_capture::dl","hl_capture::encode","hl_capture::engine","hl_capture::fps_converter::sampling","hl_capture::fps_converter::simple","hl_capture::hooks::hw","to_owned","clone_into","hl_capture::utils::maybe_unavaliable","time_passed","portable_samplepair_t","cvar_t","formatter","CaptureParameters","VideoBuffer","AudioBuffer","SendOnDrop","CaptureThreadEvent","GameThreadEvent","cap_start","cap_version","EncoderParameters","PixFmtConverter","PixFmtConverterInner","cap_video_encoder","cap_audio_encoder","MainThreadData","MainThreadDataContainer","EngineCVarGuard","MainThreadMarker","FPSConverters","SamplingConverter","SamplingConverterPrivate","OclRuntimeData","SimpleConverter","FPSConverter","Functions","OclGlTexture","FBO_Container_t","client_static_t","SoundCaptureMode","FrameCapture","MaybeUnavailable"];

searchIndex["hl_capture"]={"doc":E,"i":[[5,R[46],R[21],R[57],N,[[]]],[5,R[47],E,R[58],N,[[]]],[5,R[48],E,R[59],N,[[[R[0]]],[R[0]]]],[5,R[49],E,R[60],N,[[["c_float"]],[R[0]]]],[5,R[50],E,R[61],N,[[[R[0]]]]],[5,R[51],E,R[62],N,[[[R[0]]]]],[5,R[45],E,R[56],N,[[],[R[0]]]],[5,R[52],E,R[63],N,[[[R[0]]]]],[5,R[53],E,R[64],N,[[[R[0]]]]],[5,R[54],E,R[65],N,[[]]],[5,R[55],E,R[66],N,[[],[R[0]]]],[0,"macros",E,E,N,N],[0,R[8],E,E,N,N],[3,R[14],R[76],E,N,N],[12,R[1],E,E,0,N],[3,R[15],E,"Receives buffers to write pixels to.",N,N],[12,R[1],E,E,1,N],[3,R[16],E,"Receives buffers to write samples to.",N,N],[12,R[1],E,E,2,N],[3,R[17],E,"Receives various game thread-related events, such as…",N,N],[12,R[1],E,E,3,N],[3,R[18],E,"Sends events and frames to encode to the capture thread.",N,N],[12,R[1],E,E,4,N],[3,R[98],E,E,N,N],[12,"sampling_exposure",E,E,5,N],[12,"sampling_time_base",E,E,5,N],[12,"sound_extra",E,E,5,N],[12,R[24],E,E,5,N],[12,"volume",E,E,5,N],[3,R[99],E,E,N,N],[12,"data",E,E,6,N],[12,"width",E,E,6,N],[12,"height",E,E,6,N],[12,"format",E,E,6,N],[12,"components",E,E,6,N],[12,"frame",E,E,6,N],[12,"data_is_in_frame",E,E,6,N],[3,R[100],E,E,N,N],[12,"data",E,E,7,N],[3,R[101],E,E,N,N],[12,"buffer",E,E,8,N],[12,"channel",E,E,8,N],[3,R[104],E,E,N,N],[3,"cap_stop",E,E,N,N],[3,"cap_test",E,E,N,N],[3,R[105],E,E,N,N],[4,R[102],E,E,N,N],[13,"CaptureStart",E,E,9,N],[13,"CaptureStop",E,E,9,N],[13,"VideoFrame",E,E,9,N],[13,"AudioFrame",E,E,9,N],[4,R[103],E,E,N,N],[13,"Message",E,E,10,N],[13,"EncoderPixelFormat",E,E,10,N],[5,"capture_thread",E,E,N,[[[R[2]],[R[2]],[R[2]],["receiver"]]]],[5,"encode",E,E,N,[[["usize"],[R[19]],[R[4]],[R[3]],["sendondrop",[R[3]]]],[[R[13],["error"]],["error"]]]],[5,"stop_encoder",E,"Properly closes and drops the encoder.",N,[[[R[2]],[R[4],[R[5]]],[R[5]]]]],[5,R[25],E,E,N,[[[R[6]]]]],[5,"get_buffer",E,E,N,[[[R[6]]],[R[3]]]],[5,"get_audio_buffer",E,E,N,[[[R[6]]],[R[9]]]],[5,"get_event",E,E,N,[[[R[6]]],[[R[7]],[R[4],[R[7]]]]]],[5,"get_event_block",E,E,N,[[[R[6]]],[R[7]]]],[5,R[8],E,E,N,[[[R[6]],[R[3]],["usize"]]]],[5,"capture_audio",E,E,N,[[[R[6]],[R[9]]]]],[5,"is_capturing",E,E,N,[[],["bool"]]],[5,"get_capture_parameters",E,E,N,[[[R[22]]],[R[12]]]],[5,"stop",E,E,N,[[[R[22]]]]],[5,"parse_fps",E,"Parses the given string and returns a time base.",N,[[["str"]],[[R[4],[R[10]]],[R[10]]]]],[5,"parse_exposure",E,"Parses the given string into a valid exposure value.",N,[[["str"]],[["f64"],["error"],[R[13],["f64","error"]]]]],[5,"parse_pixel_format",E,"Parses the given string into a pixel format.",N,[[["str"]],[[R[13],["pixel","error"]],["error"],["pixel"]]]],[5,"parse_encoder_parameters",E,"Parses the CVar values into `EncoderParameters`.",N,[[[R[22]]],[[R[11]],[R[13],[R[11],"error"]],["error"]]]],[5,"parse_capture_parameters",E,"Parses the CVar values into `CaptureParameters`.",N,[[[R[22]]],[[R[12]],["error"],[R[13],[R[12],"error"]]]]],[5,"test_encoder",E,"Starts and stops the encoder.",N,[[[R[11]]],[[R[13],["error"]],["error"]]]],[6,R[32],E,E,N,N],[7,R[14],E,E,N,N],[7,R[15],E,E,N,N],[7,R[16],E,E,N,N],[7,R[17],E,E,N,N],[7,R[18],E,E,N,N],[7,"cap_video_bitrate",E,E,N,N],[7,"cap_audio_bitrate",E,E,N,N],[7,"cap_crf",E,E,N,N],[7,"cap_filename",E,E,N,N],[7,"cap_fps",E,E,N,N],[7,"cap_muxer_settings",E,E,N,N],[7,"cap_pixel_format",E,E,N,N],[7,"cap_audio_encoder_settings",E,E,N,N],[7,"cap_video_encoder_settings",E,E,N,N],[7,"cap_vpx_threads",E,E,N,N],[7,"cap_x264_preset",E,E,N,N],[7,"cap_sampling_exposure",E,E,N,N],[7,"cap_sampling_sps",E,E,N,N],[7,"cap_sound_extra",E,E,N,N],[7,"cap_volume",E,E,N,N],[11,"new",E,E,6,[[],["self"]]],[11,"set_resolution",E,E,6,[[["self"],["u32"]]]],[11,"set_format",E,E,6,[[["self"],["pixel"]]]],[11,"as_mut_slice",E,E,6,[[["self"]]]],[11,"get_frame",E,E,6,[[["self"]],[R[19]]]],[11,"copy_to_frame",E,E,6,[[["self"],[R[19]]]]],[11,"new",E,E,7,[[],["self"]]],[11,"data",E,E,7,[[["self"]],["vec"]]],[11,R[33],E,E,7,[[["self"]],["vec"]]],[11,"new",E,E,8,[[[T],[R[2]]],["self"]]],[11,R[20],E,E,11,[[]]],[11,R[20],E,E,12,[[]]],[11,R[20],E,E,13,[[]]],[11,R[20],E,E,14,[[]]],[0,"command",R[21],E,N,N],[3,"Args",R[83],"An iterator over the console command arguments.",N,N],[12,"count",E,E,15,N],[12,"index",E,E,15,N],[12,R[22],E,"Engine functions.",15,N],[17,"COMMANDS",E,E,N,N],[8,"Command",E,E,N,N],[10,"name",E,E,16,[[["self"]]]],[10,R[20],E,E,16,[[["self"]]]],[11,"new",E,E,15,[[[R[22]]],["self"]]],[0,"cvar",R[21],E,N,N],[3,R[96],R[84],"The engine `CVar` type.",N,N],[12,"name",E,E,17,N],[12,R[26],E,E,17,N],[12,"flags",E,E,17,N],[12,"value",E,E,17,N],[12,"next",E,E,17,N],[3,"CVar",E,"Safe wrapper for the engine `CVar` type.",N,N],[12,R[30],E,R[23],18,N],[12,"default_value",E,R[23],18,N],[12,"name",E,R[23],18,N],[6,R[32],E,E,N,N],[7,"CVARS",E,E,N,N],[17,"EMPTY_CVAR_T",E,E,N,N],[11,"string_is_non_null",E,E,17,[[["self"]],["bool"]]],[11,R[35],E,"Retrieves a mutable reference to the engine CVar.",18,[[["self"]],[R[96]]]],[11,"register",E,"Registers this console variable.",18,[[["self"],[R[22]]],[[R[13],["error"]],["error"]]]],[11,"to_string",E,"Returns the string this variable is set to.",18,[[["self"],[R[22]]],[[R[26]],[R[13],[R[26],"error"]],["error"]]]],[11,"parse",E,"Tries parsing this variable's value to the desired type.",18,[[["self"],[R[22]]],[[R[13],["error"]],["error"]]]],[0,"dl",R[21],E,N,N],[3,"Handle",R[85],"A container for a `dlopen()` handle.",N,N],[12,"ptr",E,"The handle returned by `dlopen()`.",19,N],[5,"open",E,"Opens a dynamic library and returns the resulting handle.",N,[[[R[0]],["str"]],[["handle"],["error"],[R[13],["handle","error"]]]]],[6,R[32],E,E,N,N],[11,"sym",E,"Obtains a symbol address using `dlsym()`.",19,[[["self"],["str"]],[[R[13],["error"]],["error"]]]],[0,"encode",R[21],E,N,N],[3,R[27],R[86],E,N,N],[12,R[1],E,E,20,N],[3,R[28],E,E,N,N],[12,R[1],E,E,21,N],[3,"Encoder",E,"An encoder used to encode video and audio to a file.",N,N],[12,"converter",E,E,22,N],[12,"resampler",E,E,22,N],[12,"context",E,E,22,N],[12,"video_encoder",E,E,22,N],[12,"audio_encoder",E,E,22,N],[12,"video_stream_index",E,E,22,N],[12,"audio_stream_index",E,E,22,N],[12,"audio_output_frame",E,E,22,N],[12,"audio_input_frame",E,E,22,N],[12,"packet",E,E,22,N],[12,"finished",E,E,22,N],[12,R[24],E,E,22,N],[12,"video_stream_time_base",E,E,22,N],[12,"audio_stream_time_base",E,E,22,N],[12,"video_pts",E,E,22,N],[12,"audio_pts",E,E,22,N],[12,"audio_position",E,"Current position, in samples, in the audio frame.",22,N],[3,R[106],E,"Parameters for encoding and muxing.",N,N],[12,"audio_bitrate",E,E,23,N],[12,"video_bitrate",E,E,23,N],[12,"crf",E,E,23,N],[12,"filename",E,E,23,N],[12,"muxer_settings",E,E,23,N],[12,"pixel_format",E,E,23,N],[12,"preset",E,E,23,N],[12,R[24],E,E,23,N],[12,"audio_encoder_settings",E,E,23,N],[12,"video_encoder_settings",E,E,23,N],[12,"vpx_threads",E,E,23,N],[12,R[37],E,E,23,N],[3,R[107],E,"Lazily-initialized pixel format converter.",N,N],[12,"inner",E,E,24,N],[12,"output_format",E,E,24,N],[3,R[108],E,"Pixel format converter.",N,N],[12,"context",E,E,25,N],[12,R[29],E,E,25,N],[3,R[109],E,E,N,N],[3,R[110],E,E,N,N],[5,R[25],E,"Initialize the encoding stuff.",N,[[]]],[5,"video_encoder_info",E,"Outputs information about the selected video encoder.",N,[[[R[26]]]]],[5,"audio_encoder_info",E,"Outputs information about the selected audio encoder.",N,[[[R[26]]]]],[6,R[32],E,E,N,N],[7,R[27],E,E,N,N],[7,R[28],E,E,N,N],[17,"HL_SAMPLE_FORMAT",E,E,N,N],[17,"HL_SAMPLE_RATE",E,E,N,N],[17,"HL_CHANNEL_LAYOUT",E,E,N,N],[11,"start",E,E,22,[[[R[11]]],[[R[13],["error"]],["error"]]]],[11,"push_frame",E,E,22,[[["self"],[R[4],["video"]],["usize"],["video"]],[[R[13],["error"]],["error"]]]],[11,"push_audio_frame",E,E,22,[[["self"]],[[R[13],["error"]],["error"]]]],[11,"take",E,"Takes the given frame the specified number of times.",22,[[["self"],["video"],["usize"]],[[R[13],["error"]],["error"]]]],[11,"take_audio",E,"Encodes 16-bit signed interleaved 2-channel stereo sound.",22,[[["self"]],[[R[13],["error"]],["error"]]]],[11,"flush",E,E,22,[[["self"]],[[R[13],["error"]],["error"]]]],[11,"finish",E,E,22,[[["self"]],[[R[13],["error"]],["error"]]]],[11,"width",E,E,22,[[["self"]],["u32"]]],[11,"height",E,E,22,[[["self"]],["u32"]]],[11,"format",E,E,22,[[["self"]],["pixel"]]],[11,"new",E,E,24,[[["pixel"]],["self"]]],[11,"convert",E,E,24,[[["self"],["video"]],[["video"],["error"],[R[13],["video","error"]]]]],[11,R[29],E,E,24,[[["self"]],[["video"],[R[4],["video"]]]]],[11,"new",E,E,25,[[["pixel"]],[[R[13],["error"]],["error"]]]],[11,"convert",E,E,25,[[["self"],["video"]],[["video"],["error"],[R[13],["video","error"]]]]],[11,"format",E,E,25,[[["self"]],["pixel"]]],[11,R[20],E,E,26,[[]]],[11,R[20],E,E,27,[[]]],[0,R[22],R[21],E,N,N],[3,R[111],R[87],"Global variables accessible from the main game thread.",N,N],[12,"capture_parameters",E,E,28,N],[12,"capture_sound",E,E,28,N],[12,"sound_remainder",E,E,28,N],[12,"sound_capture_mode",E,E,28,N],[12,"inside_key_event",E,E,28,N],[12,"inside_gl_setmode",E,E,28,N],[12,R[36],E,E,28,N],[12,"encoder_pixel_format",E,E,28,N],[12,"pro_que",E,E,28,N],[12,"ocl_yuv_buffers",E,E,28,N],[3,R[112],E,"A Send+Sync container to allow putting `MainThreadData`…",N,N],[12,"data",E,E,29,N],[3,"Engine",E,"A \"container\" for unsafe engine functions.",N,N],[12,R[31],E,"This field serves two purposes: firstly, it prevents…",30,N],[3,R[113],E,"A guard for statically ensuring that no engine functions…",N,N],[12,R[30],E,E,31,N],[12,"_borrow_guard",E,E,31,N],[3,R[114],E,"A static guarantee of being in the main game thread,…",N,N],[12,R[31],E,E,32,N],[12,"_private_2",E,E,32,N],[6,R[32],E,E,N,N],[7,"MAIN_THREAD_DATA",E,E,N,N],[11,"new",E,"Creates an instance of Engine.",30,[[],["self"]]],[11,"marker",E,"Splits off a `MainThreadMarker`.",30,[[["self"]]]],[11,"marker_mut",E,"Splits off a `MainThreadMarker` from a mutable reference.",30,[[["self"]]]],[11,"data",E,"Returns a reference to the main thread global variables.",30,[[["self"]],[R[34]]]],[11,R[33],E,"Returns a mutable reference to the main thread global…",30,[[["self"]],[R[34]]]],[11,"args",E,"Returns an iterator over the console command arguments.",30,[[["self"]],["args"]]],[11,R[68],E,R[69],30,[[["self"],["str"]]]],[11,R[70],E,"Returns the number of console command arguments.",30,[[["self"]],["u32"]]],[11,R[71],E,"Returns the console command argument with the given index.",30,[[["self"],["u32"]],[R[26]]]],[11,R[67],E,"Registers the given console variable.",30,[[["self"],["cvar"]],[[R[13],["error"]],["error"]]]],[11,R[35],E,"Returns the engine CVar wrapped by the given CVar.",30,[[["self"],["cvar"]],["enginecvarguard"]]],[11,"new",E,E,32,[[],["self"]]],[0,R[36],R[21],E,N,N],[4,R[115],R[41],E,N,N],[13,"Simple",E,E,33,N],[13,"Sampling",E,E,33,N],[0,"sampling",E,E,N,N],[3,R[116],R[88],"Resampling FPS converter which averages input frames for…",N,N],[12,R[42],E,R[43],34,N],[12,R[24],E,R[44],34,N],[12,"private",E,"Data with a destructor, wrapped so `SamplingConverter` can…",34,N],[3,R[117],E,"Data with a destructor.",N,N],[12,"ocl_runtime_data",E,"Data used for OpenCL operations.",35,N],[12,"ocl_backup_buffer",E,"Pixels from the buffer are stored here when the engine…",35,N],[12,R[37],E,"The video resolution.",35,N],[12,"gl_sampling_buffer",E,"The OpenGL sampling buffer.",35,N],[12,"gl_read_buffer",E,"The OpenGL read buffer.",35,N],[3,R[118],E,"Data used at runtime by OpenCL sampling.",N,N],[12,"ocl_buffers",E,"Buffer images.",36,N],[12,"ocl_output_image",E,"Output image.",36,N],[12,"ocl_current_buffer_index",E,"Index of the last written to OpenCL buffer.",36,N],[5,"ocl_weighted_image_add",E,E,N,[[["f32"],["image"],["image"],["image"],[R[22]]]]],[5,"ocl_fill_with_black",E,E,N,[[[R[22]],["image"]]]],[5,"weighted_image_add",E,E,N,[[["f32"]]]],[5,"weighted_image_add_to",E,E,N,[[["f32"]]]],[5,"fill_with_black",E,E,N,[[]]],[11,"new",E,E,34,[[[R[22]],["f64"]],["self"]]],[11,R[39],E,R[40],34,[[["self"],[R[22]]]]],[11,"new",E,E,35,[[[R[22]]],["self"]]],[11,"get_ocl_data",E,E,35,[[["self"],[R[22]]],[[R[4],[R[38]]],[R[38]]]]],[11,R[39],E,R[40],35,[[["self"],[R[22]]]]],[11,"restore_ocl_data",E,"This should be called after an engine restart.",35,[[["self"],[R[22]]]]],[11,"new",E,E,36,[[[R[22]]],[R[4]]]],[11,"src_buffer",E,E,36,[[["self"]],["image"]]],[11,"dst_buffer",E,E,36,[[["self"]],["image"]]],[11,"output_image",E,E,36,[[["self"]],["image"]]],[11,"switch_buffer_index",E,E,36,[[["self"]]]],[0,"simple",R[41],E,N,N],[3,R[119],R[89],"Simple FPS converter which drops and duplicates frames to…",N,N],[12,R[42],E,R[43],37,N],[12,R[24],E,R[44],37,N],[11,"new",E,E,37,[[["f64"]],["self"]]],[8,R[120],R[41],E,N,N],[10,R[94],E,"Updates the FPS converter state. The converter may capture…",38,[[["self"],[R[22]],["f64"],["f"]]]],[0,"hooks",R[21],E,N,N],[0,"hw","hl_capture::hooks",E,N,N],[3,R[121],R[90],"Pointers to all used hw functions.",N,N],[12,R[45],E,E,39,N],[12,R[46],E,E,39,N],[12,"Cmd_AddCommand",E,E,39,N],[12,"Cmd_Argc",E,E,39,N],[12,"Cmd_Argv",E,E,39,N],[12,"Con_Printf",E,E,39,N],[12,R[47],E,E,39,N],[12,"Cvar_RegisterVariable",E,E,39,N],[12,R[48],E,E,39,N],[12,R[49],E,E,39,N],[12,R[50],E,E,39,N],[12,R[51],E,E,39,N],[12,R[52],E,E,39,N],[12,R[53],E,E,39,N],[12,R[54],E,E,39,N],[12,"VideoMode_GetCurrentVideoMode",E,E,39,N],[12,R[55],E,E,39,N],[3,"Pointers",E,"Pointers to all used hw variables.",N,N],[12,"cls",E,E,40,N],[12,"game",E,E,40,N],[12,"host_frametime",E,E,40,N],[12,"paintbuffer",E,E,40,N],[12,"paintedtime",E,E,40,N],[12,"realtime",E,E,40,N],[12,"s_BackBufferFBO",E,E,40,N],[12,"shm",E,E,40,N],[12,"window_rect",E,E,40,N],[3,R[122],E,"Wrapper for the OpenCL image created from an OpenGL texture.",N,N],[12,"image",E,E,41,N],[3,"RECT",E,E,N,N],[12,"left",E,E,42,N],[12,"right",E,E,42,N],[12,"top",E,E,42,N],[12,"bottom",E,E,42,N],[3,R[123],E,E,N,N],[12,"FBO",E,E,43,N],[12,"CB",E,E,43,N],[12,"DB",E,E,43,N],[12,"Tex",E,E,43,N],[3,R[124],E,E,N,N],[12,"stuff",E,E,44,N],[12,"demoplayback",E,E,44,N],[3,R[95],E,E,N,N],[12,"left",E,E,45,N],[12,"right",E,E,45,N],[3,"dma_t",E,E,N,N],[12,"gamealive",E,E,46,N],[12,"soundalive",E,E,46,N],[12,"splitbuffer",E,E,46,N],[12,"channels",E,E,46,N],[12,"samples",E,E,46,N],[12,"submission_chunk",E,E,46,N],[12,"samplepos",E,E,46,N],[12,"samplebits",E,E,46,N],[12,"speed",E,E,46,N],[12,"dmaspeed",E,E,46,N],[12,"buffer",E,E,46,N],[3,"CGame",E,E,N,N],[12,"stuff",E,E,47,N],[12,"m_hSDLGLContext",E,E,47,N],[4,R[125],E,E,N,N],[13,"Normal",E,E,48,N],[13,"Remaining",E,E,48,N],[4,R[126],E,E,N,N],[13,"OpenGL",E,E,49,N],[13,"OpenCL",E,E,49,N],[5,R[45],E,R[56],N,[[],[R[0]]]],[5,R[46],E,R[57],N,[[]]],[5,R[47],E,R[58],N,[[]]],[5,R[48],E,R[59],N,[[[R[0]]],[R[0]]]],[5,R[49],E,R[60],N,[[["c_float"]],[R[0]]]],[5,R[50],E,R[61],N,[[[R[0]]]]],[5,R[51],E,R[62],N,[[[R[0]]]]],[5,R[52],E,R[63],N,[[[R[0]]]]],[5,R[53],E,R[64],N,[[[R[0]]]]],[5,R[54],E,R[65],N,[[]]],[5,R[55],E,R[66],N,[[],[R[0]]]],[5,"refresh_pointers",E,"Obtains and stores all necessary function and variable…",N,[[[R[6]]],[[R[13],["error"]],["error"]]]],[5,"reset_pointers",E,"Resets all pointers to their default values.",N,[[[R[6]]]]],[5,"register_cvars_and_commands",E,"Registers console commands and variables.",N,[[[R[22]]]]],[5,"register_command",E,"Registers a console command.",N,[[]]],[5,R[67],E,"Registers a console variable.",N,[[[R[96]]]]],[5,R[68],E,R[69],N,[[["str"]]]],[5,R[70],E,"Gets the console command argument count.",N,[[],["u32"]]],[5,R[71],E,"Gets a console command argument.",N,[[["u32"]],[R[26]]]],[5,"get_resolution",E,"Returns the current game resolution.",N,[[[R[6]]]]],[5,"reset_sound_capture_remainder",E,"Resets the sound capture remainder.",N,[[[R[22]]]]],[5,"capture_remaining_sound",E,"Captures the remaining and extra sound.",N,[[[R[22]]]]],[5,"get_pro_que",E,"Returns the ocl `ProCue`.",N,[[[R[22]]],[[R[72]],[R[4],[R[72]]]]]],[5,"build_ocl_buffer",E,"Builds an ocl `Buffer` with the specified length.",N,[[[R[72]],["usize"]],[[R[13],["buffer","error"]],["buffer",["u8"]],["error"]]]],[5,"build_ocl_image",E,"Builds an ocl `Image` with the specified dimensions.",N,[[[R[73]],[R[72]],["memflags"],["imagechanneldatatype"]],[["image"],[R[13],["image","error"]],["error"]]]],[5,"build_yuv_buffers",E,"Builds ocl YUV buffers with the specified length.",N,[[[R[72]]],[R[4]]]],[5,"get_yuv_buffers_and_pro_que",E,"Returns the ocl buffers for Y, U and V, (HACK:) as well as…",N,[[[R[22]]],[R[4]]]],[5,"capture_frame",E,"Captures and returns the current frame.",N,[[[R[22]]],["framecapture"]]],[5,"ocl_color_conversion_func_name",E,"Gets the OpenCL RGB->YUV color conversion function name.",N,[[["pixel"]],[[R[4],["str"]],["str"]]]],[5,"read_ocl_image_into_buf",E,"Reads the given `ocl::Image` into the buffer.",N,[[[R[22]],["image"],[R[3]]]]],[5,"read_pixels",E,"Reads pixels into the buffer.",N,[[[R[6]]]]],[5,"get_opengl_context",E,"Retrieves the current OpenGL context.",N,[[[R[6]]]]],[6,R[32],E,E,N,N],[7,"FUNCTIONS",E,E,N,N],[7,"POINTERS",E,E,N,N],[7,"cap_allow_tabbing_out_in_demos",E,E,N,N],[7,"cap_playdemostop",E,E,N,N],[17,"AUDIO_BUFFER",E,"The audio buffer container, set and cleared in…",N,N],[11,"new",E,E,41,[[["queue"],[R[6]],["gluint"],[R[73]]],["self"]]],[0,"sdl",R[21],E,N,N],[5,"get_proc_address","hl_capture::sdl",E,N,[[["str"]]]],[0,"utils",R[21],E,N,N],[5,"format_error","hl_capture::utils","Returns a string describing the error and the full chain.",N,[[["error"]],[R[26]]]],[0,"maybe_unavaliable",E,E,N,N],[4,R[127],R[93],"Represents a value that is not checked at first, and upon…",N,N],[13,"NotChecked",E,E,50,N],[13,"Unavailable",E,E,50,N],[13,"Available",E,E,50,N],[11,"reset",E,"Resets this value to the not checked state.",50,[[["self"]]]],[11,"available",E,"If the value is available, returns it, otherwise returns…",50,[[],[R[4]]]],[11,"take",E,"Takes a value out of the `MaybeUnavailable`, leaving…",50,[[["self"]],[R[4]]]],[11,"unwrap",E,"Moves the value `v` out of the `MaybeUnavailable<T>` if it…",50,[[],[T]]],[11,"is_not_checked",E,"Returns `true` if the value is `NotChecked`.",50,[[["self"]],["bool"]]],[11,"as_ref",E,R[74],50,[[["self"]],[[T],[R[75]]]]],[11,"as_mut",E,R[74],50,[[["self"]],[[R[75]],[T]]]],[11,"from_check_result",E,"Returns `Available(x)` if passed `Some(x)` and…",50,[[[R[4]]],["self"]]],[11,"into",R[76],E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[77],E,E,0,[[[U]],[R[13]]]],[11,R[78],E,E,0,[[],[R[13]]]],[11,R[79],E,E,0,[[["self"]],[T]]],[11,R[81],E,E,0,[[["self"]],[T]]],[11,R[80],E,E,0,[[["self"]],[R[82]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[77],E,E,1,[[[U]],[R[13]]]],[11,R[78],E,E,1,[[],[R[13]]]],[11,R[79],E,E,1,[[["self"]],[T]]],[11,R[81],E,E,1,[[["self"]],[T]]],[11,R[80],E,E,1,[[["self"]],[R[82]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[77],E,E,2,[[[U]],[R[13]]]],[11,R[78],E,E,2,[[],[R[13]]]],[11,R[79],E,E,2,[[["self"]],[T]]],[11,R[81],E,E,2,[[["self"]],[T]]],[11,R[80],E,E,2,[[["self"]],[R[82]]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[77],E,E,3,[[[U]],[R[13]]]],[11,R[78],E,E,3,[[],[R[13]]]],[11,R[79],E,E,3,[[["self"]],[T]]],[11,R[81],E,E,3,[[["self"]],[T]]],[11,R[80],E,E,3,[[["self"]],[R[82]]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[77],E,E,4,[[[U]],[R[13]]]],[11,R[78],E,E,4,[[],[R[13]]]],[11,R[79],E,E,4,[[["self"]],[T]]],[11,R[81],E,E,4,[[["self"]],[T]]],[11,R[80],E,E,4,[[["self"]],[R[82]]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[77],E,E,5,[[[U]],[R[13]]]],[11,R[78],E,E,5,[[],[R[13]]]],[11,R[79],E,E,5,[[["self"]],[T]]],[11,R[81],E,E,5,[[["self"]],[T]]],[11,R[80],E,E,5,[[["self"]],[R[82]]]],[11,"into",E,E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[77],E,E,6,[[[U]],[R[13]]]],[11,R[78],E,E,6,[[],[R[13]]]],[11,R[79],E,E,6,[[["self"]],[T]]],[11,R[81],E,E,6,[[["self"]],[T]]],[11,R[80],E,E,6,[[["self"]],[R[82]]]],[11,"into",E,E,7,[[],[U]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[77],E,E,7,[[[U]],[R[13]]]],[11,R[78],E,E,7,[[],[R[13]]]],[11,R[79],E,E,7,[[["self"]],[T]]],[11,R[81],E,E,7,[[["self"]],[T]]],[11,R[80],E,E,7,[[["self"]],[R[82]]]],[11,"into",E,E,8,[[],[U]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[77],E,E,8,[[[U]],[R[13]]]],[11,R[78],E,E,8,[[],[R[13]]]],[11,R[79],E,E,8,[[["self"]],[T]]],[11,R[81],E,E,8,[[["self"]],[T]]],[11,R[80],E,E,8,[[["self"]],[R[82]]]],[11,"into",E,E,11,[[],[U]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[77],E,E,11,[[[U]],[R[13]]]],[11,R[78],E,E,11,[[],[R[13]]]],[11,R[79],E,E,11,[[["self"]],[T]]],[11,R[81],E,E,11,[[["self"]],[T]]],[11,R[80],E,E,11,[[["self"]],[R[82]]]],[11,"into",E,E,12,[[],[U]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[77],E,E,12,[[[U]],[R[13]]]],[11,R[78],E,E,12,[[],[R[13]]]],[11,R[79],E,E,12,[[["self"]],[T]]],[11,R[81],E,E,12,[[["self"]],[T]]],[11,R[80],E,E,12,[[["self"]],[R[82]]]],[11,"into",E,E,13,[[],[U]]],[11,"from",E,E,13,[[[T]],[T]]],[11,R[77],E,E,13,[[[U]],[R[13]]]],[11,R[78],E,E,13,[[],[R[13]]]],[11,R[79],E,E,13,[[["self"]],[T]]],[11,R[81],E,E,13,[[["self"]],[T]]],[11,R[80],E,E,13,[[["self"]],[R[82]]]],[11,"into",E,E,14,[[],[U]]],[11,"from",E,E,14,[[[T]],[T]]],[11,R[77],E,E,14,[[[U]],[R[13]]]],[11,R[78],E,E,14,[[],[R[13]]]],[11,R[79],E,E,14,[[["self"]],[T]]],[11,R[81],E,E,14,[[["self"]],[T]]],[11,R[80],E,E,14,[[["self"]],[R[82]]]],[11,"into",E,E,9,[[],[U]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[77],E,E,9,[[[U]],[R[13]]]],[11,R[78],E,E,9,[[],[R[13]]]],[11,R[79],E,E,9,[[["self"]],[T]]],[11,R[81],E,E,9,[[["self"]],[T]]],[11,R[80],E,E,9,[[["self"]],[R[82]]]],[11,"into",E,E,10,[[],[U]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[77],E,E,10,[[[U]],[R[13]]]],[11,R[78],E,E,10,[[],[R[13]]]],[11,R[79],E,E,10,[[["self"]],[T]]],[11,R[81],E,E,10,[[["self"]],[T]]],[11,R[80],E,E,10,[[["self"]],[R[82]]]],[11,"into",R[83],E,15,[[],[U]]],[11,"from",E,E,15,[[[T]],[T]]],[11,"into_iter",E,E,15,[[],["i"]]],[11,R[77],E,E,15,[[[U]],[R[13]]]],[11,R[78],E,E,15,[[],[R[13]]]],[11,R[79],E,E,15,[[["self"]],[T]]],[11,R[81],E,E,15,[[["self"]],[T]]],[11,R[80],E,E,15,[[["self"]],[R[82]]]],[11,"into",R[84],E,17,[[],[U]]],[11,"from",E,E,17,[[[T]],[T]]],[11,R[77],E,E,17,[[[U]],[R[13]]]],[11,R[78],E,E,17,[[],[R[13]]]],[11,R[79],E,E,17,[[["self"]],[T]]],[11,R[81],E,E,17,[[["self"]],[T]]],[11,R[80],E,E,17,[[["self"]],[R[82]]]],[11,"into",E,E,18,[[],[U]]],[11,"from",E,E,18,[[[T]],[T]]],[11,R[77],E,E,18,[[[U]],[R[13]]]],[11,R[78],E,E,18,[[],[R[13]]]],[11,R[79],E,E,18,[[["self"]],[T]]],[11,R[81],E,E,18,[[["self"]],[T]]],[11,R[80],E,E,18,[[["self"]],[R[82]]]],[11,"into",R[85],E,19,[[],[U]]],[11,"from",E,E,19,[[[T]],[T]]],[11,R[77],E,E,19,[[[U]],[R[13]]]],[11,R[78],E,E,19,[[],[R[13]]]],[11,R[79],E,E,19,[[["self"]],[T]]],[11,R[81],E,E,19,[[["self"]],[T]]],[11,R[80],E,E,19,[[["self"]],[R[82]]]],[11,"into",R[86],E,20,[[],[U]]],[11,"from",E,E,20,[[[T]],[T]]],[11,R[77],E,E,20,[[[U]],[R[13]]]],[11,R[78],E,E,20,[[],[R[13]]]],[11,R[79],E,E,20,[[["self"]],[T]]],[11,R[81],E,E,20,[[["self"]],[T]]],[11,R[80],E,E,20,[[["self"]],[R[82]]]],[11,"into",E,E,21,[[],[U]]],[11,"from",E,E,21,[[[T]],[T]]],[11,R[77],E,E,21,[[[U]],[R[13]]]],[11,R[78],E,E,21,[[],[R[13]]]],[11,R[79],E,E,21,[[["self"]],[T]]],[11,R[81],E,E,21,[[["self"]],[T]]],[11,R[80],E,E,21,[[["self"]],[R[82]]]],[11,"into",E,E,22,[[],[U]]],[11,"from",E,E,22,[[[T]],[T]]],[11,R[77],E,E,22,[[[U]],[R[13]]]],[11,R[78],E,E,22,[[],[R[13]]]],[11,R[79],E,E,22,[[["self"]],[T]]],[11,R[81],E,E,22,[[["self"]],[T]]],[11,R[80],E,E,22,[[["self"]],[R[82]]]],[11,"into",E,E,23,[[],[U]]],[11,"from",E,E,23,[[[T]],[T]]],[11,R[77],E,E,23,[[[U]],[R[13]]]],[11,R[78],E,E,23,[[],[R[13]]]],[11,R[79],E,E,23,[[["self"]],[T]]],[11,R[81],E,E,23,[[["self"]],[T]]],[11,R[80],E,E,23,[[["self"]],[R[82]]]],[11,"into",E,E,24,[[],[U]]],[11,"from",E,E,24,[[[T]],[T]]],[11,R[77],E,E,24,[[[U]],[R[13]]]],[11,R[78],E,E,24,[[],[R[13]]]],[11,R[79],E,E,24,[[["self"]],[T]]],[11,R[81],E,E,24,[[["self"]],[T]]],[11,R[80],E,E,24,[[["self"]],[R[82]]]],[11,"into",E,E,25,[[],[U]]],[11,"from",E,E,25,[[[T]],[T]]],[11,R[77],E,E,25,[[[U]],[R[13]]]],[11,R[78],E,E,25,[[],[R[13]]]],[11,R[79],E,E,25,[[["self"]],[T]]],[11,R[81],E,E,25,[[["self"]],[T]]],[11,R[80],E,E,25,[[["self"]],[R[82]]]],[11,"into",E,E,26,[[],[U]]],[11,"from",E,E,26,[[[T]],[T]]],[11,R[77],E,E,26,[[[U]],[R[13]]]],[11,R[78],E,E,26,[[],[R[13]]]],[11,R[79],E,E,26,[[["self"]],[T]]],[11,R[81],E,E,26,[[["self"]],[T]]],[11,R[80],E,E,26,[[["self"]],[R[82]]]],[11,"into",E,E,27,[[],[U]]],[11,"from",E,E,27,[[[T]],[T]]],[11,R[77],E,E,27,[[[U]],[R[13]]]],[11,R[78],E,E,27,[[],[R[13]]]],[11,R[79],E,E,27,[[["self"]],[T]]],[11,R[81],E,E,27,[[["self"]],[T]]],[11,R[80],E,E,27,[[["self"]],[R[82]]]],[11,"into",R[87],E,28,[[],[U]]],[11,"from",E,E,28,[[[T]],[T]]],[11,R[77],E,E,28,[[[U]],[R[13]]]],[11,R[78],E,E,28,[[],[R[13]]]],[11,R[79],E,E,28,[[["self"]],[T]]],[11,R[81],E,E,28,[[["self"]],[T]]],[11,R[80],E,E,28,[[["self"]],[R[82]]]],[11,"into",E,E,29,[[],[U]]],[11,"from",E,E,29,[[[T]],[T]]],[11,R[77],E,E,29,[[[U]],[R[13]]]],[11,R[78],E,E,29,[[],[R[13]]]],[11,R[79],E,E,29,[[["self"]],[T]]],[11,R[81],E,E,29,[[["self"]],[T]]],[11,R[80],E,E,29,[[["self"]],[R[82]]]],[11,"into",E,E,30,[[],[U]]],[11,"from",E,E,30,[[[T]],[T]]],[11,R[77],E,E,30,[[[U]],[R[13]]]],[11,R[78],E,E,30,[[],[R[13]]]],[11,R[79],E,E,30,[[["self"]],[T]]],[11,R[81],E,E,30,[[["self"]],[T]]],[11,R[80],E,E,30,[[["self"]],[R[82]]]],[11,"into",E,E,31,[[],[U]]],[11,"from",E,E,31,[[[T]],[T]]],[11,R[77],E,E,31,[[[U]],[R[13]]]],[11,R[78],E,E,31,[[],[R[13]]]],[11,R[79],E,E,31,[[["self"]],[T]]],[11,R[81],E,E,31,[[["self"]],[T]]],[11,R[80],E,E,31,[[["self"]],[R[82]]]],[11,"into",E,E,32,[[],[U]]],[11,"from",E,E,32,[[[T]],[T]]],[11,R[91],E,E,32,[[["self"]],[T]]],[11,R[92],E,E,32,[[["self"],[T]]]],[11,R[77],E,E,32,[[[U]],[R[13]]]],[11,R[78],E,E,32,[[],[R[13]]]],[11,R[79],E,E,32,[[["self"]],[T]]],[11,R[81],E,E,32,[[["self"]],[T]]],[11,R[80],E,E,32,[[["self"]],[R[82]]]],[11,"into",R[41],E,33,[[],[U]]],[11,"from",E,E,33,[[[T]],[T]]],[11,R[77],E,E,33,[[[U]],[R[13]]]],[11,R[78],E,E,33,[[],[R[13]]]],[11,R[79],E,E,33,[[["self"]],[T]]],[11,R[81],E,E,33,[[["self"]],[T]]],[11,R[80],E,E,33,[[["self"]],[R[82]]]],[11,"into",R[88],E,34,[[],[U]]],[11,"from",E,E,34,[[[T]],[T]]],[11,R[77],E,E,34,[[[U]],[R[13]]]],[11,R[78],E,E,34,[[],[R[13]]]],[11,R[79],E,E,34,[[["self"]],[T]]],[11,R[81],E,E,34,[[["self"]],[T]]],[11,R[80],E,E,34,[[["self"]],[R[82]]]],[11,"into",E,E,35,[[],[U]]],[11,"from",E,E,35,[[[T]],[T]]],[11,R[77],E,E,35,[[[U]],[R[13]]]],[11,R[78],E,E,35,[[],[R[13]]]],[11,R[79],E,E,35,[[["self"]],[T]]],[11,R[81],E,E,35,[[["self"]],[T]]],[11,R[80],E,E,35,[[["self"]],[R[82]]]],[11,"into",E,E,36,[[],[U]]],[11,"from",E,E,36,[[[T]],[T]]],[11,R[77],E,E,36,[[[U]],[R[13]]]],[11,R[78],E,E,36,[[],[R[13]]]],[11,R[79],E,E,36,[[["self"]],[T]]],[11,R[81],E,E,36,[[["self"]],[T]]],[11,R[80],E,E,36,[[["self"]],[R[82]]]],[11,"into",R[89],E,37,[[],[U]]],[11,"from",E,E,37,[[[T]],[T]]],[11,R[77],E,E,37,[[[U]],[R[13]]]],[11,R[78],E,E,37,[[],[R[13]]]],[11,R[79],E,E,37,[[["self"]],[T]]],[11,R[81],E,E,37,[[["self"]],[T]]],[11,R[80],E,E,37,[[["self"]],[R[82]]]],[11,"into",R[90],E,39,[[],[U]]],[11,"from",E,E,39,[[[T]],[T]]],[11,R[77],E,E,39,[[[U]],[R[13]]]],[11,R[78],E,E,39,[[],[R[13]]]],[11,R[79],E,E,39,[[["self"]],[T]]],[11,R[81],E,E,39,[[["self"]],[T]]],[11,R[80],E,E,39,[[["self"]],[R[82]]]],[11,"into",E,E,40,[[],[U]]],[11,"from",E,E,40,[[[T]],[T]]],[11,R[77],E,E,40,[[[U]],[R[13]]]],[11,R[78],E,E,40,[[],[R[13]]]],[11,R[79],E,E,40,[[["self"]],[T]]],[11,R[81],E,E,40,[[["self"]],[T]]],[11,R[80],E,E,40,[[["self"]],[R[82]]]],[11,"into",E,E,41,[[],[U]]],[11,"from",E,E,41,[[[T]],[T]]],[11,R[77],E,E,41,[[[U]],[R[13]]]],[11,R[78],E,E,41,[[],[R[13]]]],[11,R[79],E,E,41,[[["self"]],[T]]],[11,R[81],E,E,41,[[["self"]],[T]]],[11,R[80],E,E,41,[[["self"]],[R[82]]]],[11,"into",E,E,42,[[],[U]]],[11,"from",E,E,42,[[[T]],[T]]],[11,R[91],E,E,42,[[["self"]],[T]]],[11,R[92],E,E,42,[[["self"],[T]]]],[11,R[77],E,E,42,[[[U]],[R[13]]]],[11,R[78],E,E,42,[[],[R[13]]]],[11,R[79],E,E,42,[[["self"]],[T]]],[11,R[81],E,E,42,[[["self"]],[T]]],[11,R[80],E,E,42,[[["self"]],[R[82]]]],[11,"into",E,E,43,[[],[U]]],[11,"from",E,E,43,[[[T]],[T]]],[11,R[91],E,E,43,[[["self"]],[T]]],[11,R[92],E,E,43,[[["self"],[T]]]],[11,R[77],E,E,43,[[[U]],[R[13]]]],[11,R[78],E,E,43,[[],[R[13]]]],[11,R[79],E,E,43,[[["self"]],[T]]],[11,R[81],E,E,43,[[["self"]],[T]]],[11,R[80],E,E,43,[[["self"]],[R[82]]]],[11,"into",E,E,44,[[],[U]]],[11,"from",E,E,44,[[[T]],[T]]],[11,R[77],E,E,44,[[[U]],[R[13]]]],[11,R[78],E,E,44,[[],[R[13]]]],[11,R[79],E,E,44,[[["self"]],[T]]],[11,R[81],E,E,44,[[["self"]],[T]]],[11,R[80],E,E,44,[[["self"]],[R[82]]]],[11,"into",E,E,45,[[],[U]]],[11,"from",E,E,45,[[[T]],[T]]],[11,R[91],E,E,45,[[["self"]],[T]]],[11,R[92],E,E,45,[[["self"],[T]]]],[11,R[77],E,E,45,[[[U]],[R[13]]]],[11,R[78],E,E,45,[[],[R[13]]]],[11,R[79],E,E,45,[[["self"]],[T]]],[11,R[81],E,E,45,[[["self"]],[T]]],[11,R[80],E,E,45,[[["self"]],[R[82]]]],[11,"into",E,E,46,[[],[U]]],[11,"from",E,E,46,[[[T]],[T]]],[11,R[77],E,E,46,[[[U]],[R[13]]]],[11,R[78],E,E,46,[[],[R[13]]]],[11,R[79],E,E,46,[[["self"]],[T]]],[11,R[81],E,E,46,[[["self"]],[T]]],[11,R[80],E,E,46,[[["self"]],[R[82]]]],[11,"into",E,E,47,[[],[U]]],[11,"from",E,E,47,[[[T]],[T]]],[11,R[77],E,E,47,[[[U]],[R[13]]]],[11,R[78],E,E,47,[[],[R[13]]]],[11,R[79],E,E,47,[[["self"]],[T]]],[11,R[81],E,E,47,[[["self"]],[T]]],[11,R[80],E,E,47,[[["self"]],[R[82]]]],[11,"into",E,E,48,[[],[U]]],[11,"from",E,E,48,[[[T]],[T]]],[11,R[77],E,E,48,[[[U]],[R[13]]]],[11,R[78],E,E,48,[[],[R[13]]]],[11,R[79],E,E,48,[[["self"]],[T]]],[11,R[81],E,E,48,[[["self"]],[T]]],[11,R[80],E,E,48,[[["self"]],[R[82]]]],[11,"into",E,E,49,[[],[U]]],[11,"from",E,E,49,[[[T]],[T]]],[11,R[77],E,E,49,[[[U]],[R[13]]]],[11,R[78],E,E,49,[[],[R[13]]]],[11,R[79],E,E,49,[[["self"]],[T]]],[11,R[81],E,E,49,[[["self"]],[T]]],[11,R[80],E,E,49,[[["self"]],[R[82]]]],[11,"into",R[93],E,50,[[],[U]]],[11,"from",E,E,50,[[[T]],[T]]],[11,R[77],E,E,50,[[[U]],[R[13]]]],[11,R[78],E,E,50,[[],[R[13]]]],[11,R[79],E,E,50,[[["self"]],[T]]],[11,R[81],E,E,50,[[["self"]],[T]]],[11,R[80],E,E,50,[[["self"]],[R[82]]]],[11,"name",R[76],E,11,[[["self"]]]],[11,R[20],E,E,11,[[["self"]]]],[11,"name",E,E,12,[[["self"]]]],[11,R[20],E,E,12,[[["self"]]]],[11,"name",E,E,13,[[["self"]]]],[11,R[20],E,E,13,[[["self"]]]],[11,"name",E,E,14,[[["self"]]]],[11,R[20],E,E,14,[[["self"]]]],[11,"name",R[86],E,26,[[["self"]]]],[11,R[20],E,E,26,[[["self"]]]],[11,"name",E,E,27,[[["self"]]]],[11,R[20],E,E,27,[[["self"]]]],[11,R[94],R[88],E,34,[[["self"],[R[22]],["f64"],["f"]]]],[11,R[94],R[89],E,37,[[["self"],[R[22]],["f64"],["f"]]]],[11,"clone",R[87],E,32,[[["self"]],[R[6]]]],[11,"clone",R[90],E,42,[[["self"]],["rect"]]],[11,"clone",E,E,43,[[["self"]],["fbo_container_t"]]],[11,"clone",E,E,45,[[["self"]],[R[95]]]],[11,"drop",R[76],E,8,[[["self"]]]],[11,"drop",R[85],E,19,[[["self"]]]],[11,"drop",R[86],E,22,[[["self"]]]],[11,"drop",R[90],E,41,[[["self"]]]],[11,"as_ref",E,E,41,[[["self"]],["image"]]],[11,"next",R[83],E,15,[[["self"]],[R[4]]]],[11,"size_hint",E,E,15,[[["self"]]]],[11,"deref",R[76],E,0,[[["self"]],["rwlock"]]],[11,"deref",E,E,1,[[["self"]],["mutex"]]],[11,"deref",E,E,2,[[["self"]],["mutex"]]],[11,"deref",E,E,3,[[["self"]],["mutex"]]],[11,"deref",E,E,4,[[["self"]],["mutex"]]],[11,"deref",E,E,8,[[["self"]],[T]]],[11,"deref",R[86],E,20,[[["self"]],["mutex"]]],[11,"deref",E,E,21,[[["self"]],["mutex"]]],[11,"deref",R[87],E,31,[[["self"]],[R[96]]]],[11,"deref_mut",E,E,31,[[["self"]],[R[96]]]],[11,"fmt",R[90],E,42,[[["self"],[R[97]]],[R[13]]]],[11,"fmt",E,E,43,[[["self"],[R[97]]],[R[13]]]],[11,"fmt",E,E,45,[[["self"],[R[97]]],[R[13]]]],[11,R[25],R[76],E,0,[[["self"]]]],[11,R[25],E,E,1,[[["self"]]]],[11,R[25],E,E,2,[[["self"]]]],[11,R[25],E,E,3,[[["self"]]]],[11,R[25],E,E,4,[[["self"]]]],[11,R[25],R[86],E,20,[[["self"]]]],[11,R[25],E,E,21,[[["self"]]]]],"p":[[3,R[14]],[3,R[15]],[3,R[16]],[3,R[17]],[3,R[18]],[3,R[98]],[3,R[99]],[3,R[100]],[3,R[101]],[4,R[102]],[4,R[103]],[3,R[104]],[3,"cap_stop"],[3,"cap_test"],[3,R[105]],[3,"Args"],[8,"Command"],[3,R[96]],[3,"CVar"],[3,"Handle"],[3,R[27]],[3,R[28]],[3,"Encoder"],[3,R[106]],[3,R[107]],[3,R[108]],[3,R[109]],[3,R[110]],[3,R[111]],[3,R[112]],[3,"Engine"],[3,R[113]],[3,R[114]],[4,R[115]],[3,R[116]],[3,R[117]],[3,R[118]],[3,R[119]],[8,R[120]],[3,R[121]],[3,"Pointers"],[3,R[122]],[3,"RECT"],[3,R[123]],[3,R[124]],[3,R[95]],[3,"dma_t"],[3,"CGame"],[4,R[125]],[4,R[126]],[4,R[127]]]};
initSearch(searchIndex);addSearchOptions(searchIndex);